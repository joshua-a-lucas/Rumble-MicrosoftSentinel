{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "13876732418967370813"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to depoloy all resources. Leave this value as-is to inherit the location from the parent resource group."
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "Rumble",
      "maxLength": 11,
      "metadata": {
        "description": "Name of the Azure Functions app used to ingest asset information and alerts from the Rumble API. Will be used to generate the name of associated resources (e.g. Rumble-KeyVault)."
      }
    },
    "rumbleAPIKey": {
      "type": "secureString",
      "metadata": {
        "description": "Rumble Organization API key, used to authenticate the Azure Functions app with the Rumble API when fetching asset information."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Log Analytics workspace used by Microsoft Sentinel."
      }
    },
    "logAnalyticsWorkspaceID": {
      "type": "string",
      "metadata": {
        "description": "Log Analytics workspace ID, used to authenticate the Azure Functions app with the Log Analytics API."
      }
    },
    "logAnalyticsWorkspaceKey": {
      "type": "secureString",
      "metadata": {
        "description": "Log Analytics workspace key, used to authenticate the Azure Functions app with the Log Analytics API."
      }
    }
  },
  "variables": {
    "storageAccountName": "[format('{0}{1}', toLower(parameters('appName')), uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[format('{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id))]",
    "functionAppName": "[format('{0}-FunctionApp', parameters('appName'))]",
    "keyVaultName": "[format('{0}-KeyVault', parameters('appName'))]",
    "assetTableName": "RumbleAssets_CL",
    "alertTableName": "RumbleAlerts_CL",
    "assetParserName": "RumbleAssets",
    "alertParserName": "RumbleAlerts"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "tags": {
        "[format('hidden-link:/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/sites/{2}', subscription().id, resourceGroup().name, variables('functionAppName'))]": "Resource"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "sku": {
        "name": "Y1"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "enableRbacAuthorization": true,
        "sku": {
          "family": "A",
          "name": "standard"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/rumbleApiKey', variables('keyVaultName'))]",
      "properties": {
        "value": "[parameters('rumbleAPIKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/workspaceKey', variables('keyVaultName'))]",
      "properties": {
        "value": "[parameters('logAnalyticsWorkspaceKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[format('{0}/appsettings', variables('functionAppName'))]",
      "properties": {
        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]",
        "WEBSITE_CONTENTSHARE": "[toLower(variables('functionAppName'))]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey)]",
        "FUNCTIONS_WORKER_RUNTIME": "powershell",
        "FUNCTIONS_WORKER_RUNTIME_VERSION": "~7",
        "FUNCTIONS_EXTENSION_VERSION": "~3",
        "rumbleApiKey": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/rumbleApiKey', variables('keyVaultName')), '/')[0], split(format('{0}/rumbleApiKey', variables('keyVaultName')), '/')[1])).secretUri)]",
        "workspaceId": "[parameters('logAnalyticsWorkspaceID')]",
        "workspaceKey": "[format('@Microsoft.KeyVault(SecretUri={0})', reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/workspaceKey', variables('keyVaultName')), '/')[0], split(format('{0}/workspaceKey', variables('keyVaultName')), '/')[1])).secretUri)]",
        "WEBSITE_RUN_FROM_PACKAGE": "https://github.com/joshua-a-lucas/Rumble-MicrosoftSentinel/raw/main/Data%20Connectors/Rumble-FunctionApp.zip"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/rumbleApiKey', variables('keyVaultName')), '/')[0], split(format('{0}/rumbleApiKey', variables('keyVaultName')), '/')[1])]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/workspaceKey', variables('keyVaultName')), '/')[0], split(format('{0}/workspaceKey', variables('keyVaultName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceGroup().id, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
      "properties": {
        "description": "[format('Role required for {0} to access secrets in {1}', variables('functionAppName'), variables('keyVaultName'))]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-03-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.SecurityInsights/dataConnectors",
      "apiVersion": "2021-09-01-preview",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('logAnalyticsWorkspaceName'))]",
      "name": "Rumble-DataConnector",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "availability": {
            "isPreview": true,
            "status": "1"
          },
          "connectivityCriteria": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "[format('{0}\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(30d)', variables('assetTableName'))]"
              ]
            }
          ],
          "dataTypes": [
            {
              "lastDataReceivedQuery": "[format('{0}\n| summarize LastLogReceived = max(TimeGenerated)\n| where isnotempty(LastLogReceived)', variables('assetTableName'))]",
              "name": "[variables('assetTableName')]"
            },
            {
              "lastDataReceivedQuery": "[format('{0}\n| summarize LastLogReceived = max(TimeGenerated)\n| where isnotempty(LastLogReceived)', variables('alertTableName'))]",
              "name": "[variables('alertTableName')]"
            }
          ],
          "descriptionMarkdown": "The [Rumble](https://www.rumble.run/) data connector provides the ability to ingest a daily export of assets from the Rumble API, as well as alerts when new devices are detected on the network.",
          "graphQueries": [
            {
              "baseQuery": "[variables('assetTableName')]",
              "legend": "Rumble Assets",
              "metricName": "Total data received\""
            },
            {
              "baseQuery": "[variables('alertTableName')]",
              "legend": "Rumble Alerts",
              "metricName": "Total data received\""
            }
          ],
          "graphQueriesTableName": "[variables('assetTableName')]",
          "instructionSteps": [
            {
              "title": "",
              "description": ">**Note:** The Rumble Network Discovery data connector uses [Azure Functions](https://azure.microsoft.com/pricing/details/functions/) to ingest asset information and alerts into Microsoft Sentinel, as well as [Key Vault](https://azure.microsoft.com/en-us/pricing/details/key-vault/) to securely store secrets, which may result in additional charges."
            },
            {
              "title": "Deployment",
              "description": "Refer to the Rumble Network Discovery solution for Microsoft Sentinel [GitHub repository](https://github.com/joshua-a-lucas/Rumble-MicrosoftSentinel) for deployment instructions. You will need your Log Analytics workspace name, ID and key, as well as an Organization API key for the Rumble API.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Log Analytics workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Log Analytics primary key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            }
          ],
          "permissions": {
            "customs": [
              {
                "description": "A Rumble Organisation API key is required to ingest asset information. [Refer to the Rumble documentation for instructions on how to create an Organization API key](https://www.rumble.run/docs/organization-api/).",
                "name": "Rumble Organization API key"
              },
              {
                "description": "Read and Write permissions to create an Azure Functions app is required to create the data connector. [Refer to the Microsoft documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/).",
                "name": "Azure Functions (Microsoft.Web/Sites)"
              }
            ],
            "resourceProvider": [
              {
                "permissionsDisplayText": "Read and Write permissions on the Log Analytics workspace are required to enable the data connector.",
                "provider": "Microsoft.OperationalInsights/workspaces",
                "providerDisplayName": "Workspace",
                "requiredPermissions": {
                  "delete": true,
                  "read": true,
                  "write": true
                },
                "scope": "Workspace"
              },
              {
                "permissionsDisplayText": "Read permissions to the Log Analytics workspace keys are required. [Refer to the Microsoft documentation to learn more about Log Analytics workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "provider": "Microsoft.OperationalInsights/workspaces",
                "providerDisplayName": "Keys",
                "requiredPermissions": {
                  "action": true
                },
                "scope": "Workspace"
              }
            ]
          },
          "publisher": "Josh Lucas",
          "sampleQueries": [
            {
              "description": "Summarize the most common asset operating systems in a pie chart",
              "query": "let LastLog=toscalar(RumbleAssets | summarize max(TimeGenerated));\nRumbleAssets\n| where TimeGenerated >= LastLog\n| where os != \"\"\n| summarize count() by os\n|render piechart"
            },
            {
              "description": "List all newly-discovered assets",
              "query": "RumbleAlerts\n| where event_type == \"new-assets-found\"\n| project TimeGenerated, detected_by, names, addresses, type, os, hw, service_count"
            }
          ],
          "title": "Rumble Network Discovery"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), variables('assetParserName'))]",
      "properties": {
        "etag": "*",
        "category": "Rumble",
        "displayName": "Rumble Assets Parser",
        "functionAlias": "[variables('assetParserName')]",
        "query": "// Usage Instruction : \r\n// Paste below query in Log Analytics, click on the Save button and select as Function from drop down by specifying function name and alias (e.g. RumbleAssets).\r\n// Functions usually take 10-15 minutes to activate. You can then use function alias from any other queries (e.g. RumbleAssets | take 10).\r\n// Reference :\r\n// Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions\r\n// Tech Community Blog on KQL Functions : https://techcommunity.microsoft.com/t5/Azure-Sentinel/Using-KQL-functions-to-speed-up-analysis-in-Azure-Sentinel/ba-p/712381\r\nlet RumbleAssets = RumbleAssets_CL\r\n| project\r\n    TimeGenerated,\r\n    addresses=parse_json(addresses_s),\r\n    addresses_extra=parse_json(addresses_extra_s),\r\n    agent_name=agent_name_s,\r\n    alive=alive_b,\r\n    created_at=unixtime_seconds_todatetime(created_at_d),\r\n    detected_by=detected_by_s,\r\n    domains=parse_json(domains_s),\r\n    first_seen=unixtime_seconds_todatetime(first_seen_d),\r\n    hw=hw_s,\r\n    hw_product=hw_product_s,\r\n    hw_vendor=hw_vendor_s,\r\n    hw_version=hw_version_s,\r\n    id=id_g,\r\n    last_seen=unixtime_seconds_todatetime(last_seen_d),\r\n    names=parse_json(names_s),\r\n    newest_mac=newest_mac_s,\r\n    newest_mac_age=unixtime_nanoseconds_todatetime(newest_mac_age_d),\r\n    newest_mac_vendor=newest_mac_vendor_s,\r\n    org_name=org_name_s,\r\n    os=os_s,\r\n    os_product=os_product_s,\r\n    os_vendor=os_vendor_s,\r\n    os_version=os_version_s,\r\n    scanned=scanned_b,\r\n    service_ports_tcp=parse_json(service_ports_tcp_s),\r\n    service_ports_udp=parse_json(service_ports_udp_s),\r\n    service_protocols=parse_json(service_protocols_s),\r\n    service_products=parse_json(service_products_s),\r\n    site_name=site_name_s,\r\n    sources=parse_json(sources_s),\r\n    type=type_s,\r\n    updated_at=unixtime_seconds_todatetime(updated_at_d),\r\n    comments=column_ifexists('comments_s', ''),\r\n    tags=column_ifexists('tags_s', ''),\r\n    tag_descriptions=column_ifexists('tag_descriptions_s', '')\r\n| project-reorder\r\n    TimeGenerated, \r\n    id,\r\n    created_at,\r\n    updated_at,\r\n    first_seen,\r\n    last_seen,\r\n    org_name,\r\n    site_name,\r\n    alive,\r\n    scanned,\r\n    agent_name,\r\n    sources,\r\n    detected_by,\r\n    names,\r\n    addresses,\r\n    addresses_extra,\r\n    domains,\r\n    type,\r\n    os_vendor,\r\n    os_product,\r\n    os_version,\r\n    os,\r\n    hw_vendor,\r\n    hw_product,\r\n    hw_version,\r\n    hw,\r\n    newest_mac,\r\n    newest_mac_vendor,\r\n    newest_mac_age,\r\n    service_ports_tcp,\r\n    service_ports_udp,\r\n    service_protocols,\r\n    service_products,\r\n    comments,\r\n    tags,\r\n    tag_descriptions\r\n;RumbleAssets\r\n| order by TimeGenerated",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), variables('alertParserName'))]",
      "properties": {
        "etag": "*",
        "category": "Rumble",
        "displayName": "Rumble Alerts Parser",
        "functionAlias": "[variables('alertParserName')]",
        "query": "// Usage Instruction : \r\n// Paste below query in Log Analytics, click on the Save button and select as Function from drop down by specifying function name and alias (e.g. RumbleAlerts).\r\n// Functions usually take 10-15 minutes to activate. You can then use function alias from any other queries (e.g. RumbleAlerts | take 10).\r\n// Reference :\r\n// Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions\r\n// Tech Community Blog on KQL Functions : https://techcommunity.microsoft.com/t5/Azure-Sentinel/Using-KQL-functions-to-speed-up-analysis-in-Azure-Sentinel/ba-p/712381\r\nlet RumbleAlerts = RumbleAlerts_CL\r\n| project\r\n    TimeGenerated,\r\n    addresses=parse_json(addresses_s),\r\n    alive=tobool(alive_s),\r\n    created_at=todatetime(created_at_s),\r\n    detected_by=detected_by_s,\r\n    domains=parse_json(domains_s),\r\n    first_seen=todatetime(first_seen_s),\r\n    hw=hw_s,\r\n    id=id_g,\r\n    last_seen=todatetime(last_seen_s),\r\n    names=parse_json(names_s),\r\n    os=os_s,\r\n    service_count=toint(service_count_s),\r\n    type=type_s,\r\n    updated_at=todatetime(updated_at_s),\r\n    event_type=event_type_s\r\n| project-reorder\r\n    TimeGenerated,\r\n    event_type,\r\n    id,\r\n    created_at,\r\n    updated_at,\r\n    first_seen,\r\n    last_seen,\r\n    alive,\r\n    detected_by,\r\n    names,\r\n    addresses,\r\n    domains,\r\n    type,\r\n    os,\r\n    hw,\r\n    service_count\r\n;RumbleAlerts\r\n| order by TimeGenerated",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), 'Rumble-ExposedWebInterfaces')]",
      "properties": {
        "etag": "*",
        "category": "Hunting Queries",
        "displayName": "(Rumble) Assets with exposed web interfaces",
        "query": "// Lists all assets with exposed web interfaces using HTTP/S\r\nlet Time = toscalar(RumbleAssets_CL | summarize max(TimeGenerated));\r\nRumbleAssets\r\n| where TimeGenerated >= Time\r\n| where service_protocols has 'http'\r\n| project id, first_seen, last_seen, org_name, site_name, name=names[0], address=addresses[0], os, hw, newest_mac_vendor, service_ports_tcp, service_ports_udp, service_protocols, service_products",
        "version": 1,
        "tags": [
          {
            "name": "Description",
            "value": "Lists all assets with exposed web interfaces using HTTP/HTTPS."
          },
          {
            "name": "Tactics",
            "value": "CommandAndControl"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), 'Rumble-WindowsAssetsWithoutLogging')]",
      "properties": {
        "etag": "*",
        "category": "Hunting Queries",
        "displayName": "(Rumble) Windows assets without security event logging",
        "query": "// Get all Windows assets that have not sent security event logs to Microsoft Sentinel in the last week\r\nlet Time = toscalar(RumbleAssets_CL | summarize max(TimeGenerated));\r\n//let AssetsWithLogging = datatable(name:string)['JOSH-DESKTOP','LINUX-MINT','BOB-LAPTOP'];\r\nlet AssetsWithLogging = (Heartbeat | where TimeGenerated >= ago(7d) | distinct Computer | extend name=split(Computer, '.')[0]);\r\nRumbleAssets\r\n| where TimeGenerated >= Time\r\n| where os contains 'Windows'\r\n| project id,org_name,site_name,alive,scanned,name=split(tostring(names[0]), '.')[0],addresses, domains, type, os, hw\r\n| where name !in(AssetsWithLogging)",
        "version": 1,
        "tags": [
          {
            "name": "Description",
            "value": "Lists all Windows assets that have not sent security event logs to Microsoft Sentinel in the last week"
          },
          {
            "name": "Tactics",
            "value": "Impact"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "apiVersion": "2021-08-01",
      "name": "[guid('Rumble-Workbook', resourceGroup().id)]",
      "location": "[parameters('location')]",
      "kind": "shared",
      "properties": {
        "category": "sentinel",
        "description": "Workbook to visualize Rumble assetinformation such as the distribution of asset types and operating systems, the most common TCP/UDP ports and protocols, and more.",
        "displayName": "Rumble Network Discovery",
        "serializedData": "{\r\n  \"version\": \"Notebook/1.0\",\r\n  \"items\": [\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog=toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| where type != ''\\r\\n| summarize count() by type\",\r\n        \"size\": 3,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen asset types\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"piechart\"\r\n      },\r\n      \"customWidth\": \"20\",\r\n      \"name\": \"assetTypes\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"20\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog=toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| where os != ''\\r\\n| summarize count() by os\",\r\n        \"size\": 3,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen operating systems\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"piechart\"\r\n      },\r\n      \"customWidth\": \"20\",\r\n      \"name\": \"operatingSystems\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"20\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog=toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| where hw != ''\\r\\n| summarize count() by hw\",\r\n        \"size\": 3,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen hardware\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"piechart\"\r\n      },\r\n      \"customWidth\": \"20\",\r\n      \"name\": \"hardware\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"20\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog=toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| where newest_mac_vendor != ''\\r\\n| summarize count() by newest_mac_vendor\",\r\n        \"size\": 3,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen MAC vendors\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"piechart\"\r\n      },\r\n      \"customWidth\": \"20\",\r\n      \"name\": \"macVendor\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"20\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog = toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| mv-expand service_products\\r\\n| summarize Count=count() by Products=tostring(service_products)\\r\\n| order by Count\\r\\n| take 7\",\r\n        \"size\": 3,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen service products\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"piechart\"\r\n      },\r\n      \"customWidth\": \"20\",\r\n      \"name\": \"products\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"20\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog = toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| mv-expand service_ports_tcp\\r\\n| project toint(service_ports_tcp)\\r\\n| summarize Count=count() by Ports=tostring(service_ports_tcp)\\r\\n| order by Count\\r\\n| take 7\",\r\n        \"size\": 0,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen TCP ports\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"barchart\"\r\n      },\r\n      \"customWidth\": \"33\",\r\n      \"name\": \"tcpPorts\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"33\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog = toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| mv-expand service_ports_udp\\r\\n| project toint(service_ports_udp)\\r\\n| summarize Count=count() by Ports=tostring(service_ports_udp)\\r\\n| order by Count\\r\\n| take 7\",\r\n        \"size\": 0,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen UDP ports\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"barchart\"\r\n      },\r\n      \"customWidth\": \"33\",\r\n      \"name\": \"udpPorts\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"33\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog = toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| mv-expand service_protocols\\r\\n| summarize Count=count() by Protocols=tostring(service_protocols)\\r\\n| order by Count\\r\\n| take 7\",\r\n        \"size\": 0,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Most seen protocols\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"visualization\": \"barchart\"\r\n      },\r\n      \"customWidth\": \"33\",\r\n      \"name\": \"protocols\",\r\n      \"styleSettings\": {\r\n        \"maxWidth\": \"33\"\r\n      }\r\n    },\r\n    {\r\n      \"type\": 3,\r\n      \"content\": {\r\n        \"version\": \"KqlItem/1.0\",\r\n        \"query\": \"let LastLog = toscalar(RumbleAssets | summarize max(TimeGenerated));\\r\\nRumbleAssets\\r\\n| where TimeGenerated >= LastLog\\r\\n| where os != ''\\r\\n| where alive = true\\r\\n| where scanned = true\\r\\n| project LastSeen=last_seen,Organization=org_name,Site=site_name,Name=names[0],Address=addresses[0],Type=type,OS=os,Hardware=hw,TCP=service_ports_tcp,UDP=service_ports_udp,Protocols=service_protocols\",\r\n        \"size\": 0,\r\n        \"showAnalytics\": true,\r\n        \"title\": \"Last seen assets\",\r\n        \"timeContext\": {\r\n          \"durationMs\": 86400000\r\n        },\r\n        \"queryType\": 0,\r\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n        \"gridSettings\": {\r\n          \"rowLimit\": 50,\r\n          \"filter\": true\r\n        }\r\n      },\r\n      \"name\": \"assets\"\r\n    }\r\n  ],\r\n  \"fromTemplateId\": \"sentinel-UserWorkbook\",\r\n  \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\r\n}",
        "sourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "version": "Notebook/1.0"
      }
    },
    {
      "type": "Microsoft.SecurityInsights/watchlists",
      "apiVersion": "2021-09-01-preview",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('logAnalyticsWorkspaceName'))]",
      "name": "Rumble-Watchlist",
      "properties": {
        "contentType": "text/csv",
        "description": "High value assets from Rumble Network Discovery",
        "displayName": "Rumble - High Value Assets",
        "isDeleted": false,
        "itemsSearchKey": "id",
        "labels": [],
        "numberOfLinesToSkip": 0,
        "provider": "Custom",
        "rawContent": "id,ip_address,hostname,description\r\n00000000-0000-0000-0000-000000000000,127.0.0.1,localhost,\"My local computer\"\r\n54c89e53-b826-4bfb-b9a3-50b42d43d19b,192.168.1.56,LINUX-MINT,\"Linux Mint terminal server\"",
        "source": "Local file",
        "watchlistId": "[guid('Rumble-Watchlist', resourceGroup().id)]"
      }
    },
    {
      "type": "Microsoft.SecurityInsights/alertRules",
      "apiVersion": "2021-09-01-preview",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('logAnalyticsWorkspaceName'))]",
      "name": "Rumble-ChangedAssetAlert",
      "kind": "Scheduled",
      "properties": {
        "displayName": "(Rumble) High value network asset changed",
        "description": "Detects when a high value network asset monitored by Rumble Network Discovery has changed in some capacity at the network level (e.g. new IP address, exposed ports, etc).",
        "severity": "High",
        "enabled": false,
        "query": "let highValueAssets = (_GetWatchlist('Rumble-Watchlist') | project id, ip_address, hostname);\r\nRumbleAlerts\r\n| where event_type == 'assets-changed'\r\n| extend name=names[0], address=addresses[0]\r\n| where (id in (highValueAssets)) or (address in (highValueAssets)) or (name in (highValueAssets))",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false,
        "tactics": [
          "Reconnaissance",
          "ResourceDevelopment",
          "CommandAndControl",
          "LateralMovement"
        ],
        "alertRuleTemplateName": null,
        "incidentConfiguration": {
          "createIncident": true,
          "groupingConfiguration": {
            "enabled": true,
            "reopenClosedIncident": false,
            "lookbackDuration": "PT4H",
            "matchingMethod": "AllEntities",
            "groupByEntities": [],
            "groupByAlertDetails": [],
            "groupByCustomDetails": []
          }
        },
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        },
        "alertDetailsOverride": {
          "alertDisplayNameFormat": "(Rumble) High value network asset changed: {{address}}",
          "alertDescriptionFormat": "Rumble Network Discovery has detected that the host at {{address}} ({{name}}) has changed as of {{TimeGenerated}}.",
          "alertTacticsColumnName": null,
          "alertSeverityColumnName": null
        },
        "customDetails": {
          "ID": "id"
        },
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "address"
              }
            ]
          },
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "HostName",
                "columnName": "name"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.SecurityInsights/alertRules",
      "apiVersion": "2021-09-01-preview",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('logAnalyticsWorkspaceName'))]",
      "name": "Rumble-NewAssetAlert",
      "kind": "Scheduled",
      "properties": {
        "displayName": "(Rumble) New network assets discovered",
        "description": "Detects when Rumble Network Discovery has found a new device connected to the network.",
        "severity": "Medium",
        "enabled": false,
        "query": "RumbleAlerts\r\n| where event_type == 'new-assets-found'\r\n| extend name=names[0], address=addresses[0]",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false,
        "tactics": [
          "Reconnaissance",
          "ResourceDevelopment",
          "CommandAndControl",
          "LateralMovement"
        ],
        "alertRuleTemplateName": null,
        "incidentConfiguration": {
          "createIncident": true,
          "groupingConfiguration": {
            "enabled": true,
            "reopenClosedIncident": false,
            "lookbackDuration": "PT4H",
            "matchingMethod": "AnyAlert",
            "groupByEntities": [],
            "groupByAlertDetails": [],
            "groupByCustomDetails": []
          }
        },
        "eventGroupingSettings": {
          "aggregationKind": "SingleAlert"
        },
        "alertDetailsOverride": {
          "alertDisplayNameFormat": "(Rumble) New network assets discovered",
          "alertDescriptionFormat": "Rumble Network Discovery has detected new assets on the network as of {{TimeGenerated}}.",
          "alertTacticsColumnName": null,
          "alertSeverityColumnName": null
        },
        "customDetails": null,
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "address"
              }
            ]
          },
          {
            "entityType": "Host",
            "fieldMappings": [
              {
                "identifier": "HostName",
                "columnName": "name"
              }
            ]
          }
        ]
      }
    }
  ]
}